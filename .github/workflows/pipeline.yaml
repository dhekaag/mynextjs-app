name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: Build dan Push Image
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout kode dari repository
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Login ke GitHub Container Registry
      - name: 🔐 Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Extract metadata (tags, labels) for Docker
      - name: 🏷️ Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short,prefix=
            type=ref,event=branch

      # 5. Build and push Docker image (Production)
      - name: 🏗️ Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      # 6. Output image info
      - name: 📊 Output image information
        run: |
          echo "### 🚀 Docker Image Published!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  # Job 2: Deploy ke Kubernetes
  deploy-kubernetes:
    name: Deploy to Kubernetes
    runs-on: self-hosted
    needs: build-and-push
    if: ${{ vars.ENABLE_K8S_DEPLOY == 'true' }}

    steps:
      # 1. Checkout repository
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # 2. Pull latest image from GHCR
      - name: 🔄 Pull latest image from GHCR
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # 3. Save and transfer image to MicroK8s
      - name: 💾 Save and transfer image to MicroK8s
        run: |
          docker save ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest -o /tmp/mynextjs-app.tar
          multipass transfer /tmp/mynextjs-app.tar microk8s-vm:/tmp/
          multipass exec microk8s-vm -- microk8s ctr image import /tmp/mynextjs-app.tar

      # 4. Deploy to Kubernetes
      - name: ☸️ Deploy to Kubernetes
        run: multipass exec microk8s-vm -- make k8s-deploy

      # 5. Verify deployment
      - name: ✅ Verify deployment
        run: multipass exec microk8s-vm -- make k8s-status

      # 6. Deployment summary
      - name: 📊 Deployment summary
        run: |
          echo "### ✅ Kubernetes Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Namespace:** mynextjs-app" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Access application:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "make k8s-port-forward" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  # Job 3: Manual deployment instructions
  deployment-instructions:
    name: Manual Deployment Instructions
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ vars.ENABLE_K8S_DEPLOY != 'true' }}

    steps:
      - name: 📝 Manual deployment instructions
        run: |
          echo "### 📋 Manual Deployment Required" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ Auto-deployment is disabled." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deploy manually:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Pull image" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Transfer to MicroK8s" >> $GITHUB_STEP_SUMMARY
          echo "docker save ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest -o /tmp/mynextjs-app.tar" >> $GITHUB_STEP_SUMMARY
          echo "multipass transfer /tmp/mynextjs-app.tar microk8s-vm:/tmp/" >> $GITHUB_STEP_SUMMARY
          echo "multipass exec microk8s-vm -- microk8s ctr image import /tmp/mynextjs-app.tar" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Deploy" >> $GITHUB_STEP_SUMMARY
          echo "make k8s-deploy" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Access application" >> $GITHUB_STEP_SUMMARY
          echo "make k8s-port-forward" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
