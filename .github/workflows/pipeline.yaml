name: CI/CD Pipeline

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: Build dan Push Image
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout kode dari repository
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Login ke GitHub Container Registry
      - name: 🔐 Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Extract metadata (tags, labels) for Docker
      - name: 🏷️ Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short,prefix=
            type=ref,event=branch

      # 5. Build and push Docker image (Production)
      - name: 🏗️ Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      # 6. Output image info
      - name: 📊 Output image information
        run: |
          echo "### 🚀 Docker Image Published!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  # Job 2: Deploy ke Kubernetes (Manual/Optional)
  deploy-kubernetes:
    name: Deploy to Kubernetes (Manual Trigger)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[deploy]')

    steps:
      # 1. Checkout repository
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # 2. Setup kubectl
      - name: ⚙️ Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      # 3. Configure kubeconfig (jika ada KUBECONFIG secret)
      - name: 🔐 Configure Kubernetes cluster
        if: vars.ENABLE_K8S_DEPLOY == 'true'
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      # 4. Update image di deployment
      - name: 🔄 Update Kubernetes deployment
        if: vars.ENABLE_K8S_DEPLOY == 'true'
        run: |
          # Update image di k8s-deployment.yaml
          sed -i "s|image: mynextjs-app:latest|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" k8s-deployment.yaml

          # Apply deployment
          kubectl apply -f k8s-deployment.yaml

          # Tunggu rollout selesai
          kubectl rollout status deployment/mynextjs-app -n mynextjs-app --timeout=5m

      # 5. Output deployment status
      - name: 📊 Deployment summary
        if: vars.ENABLE_K8S_DEPLOY == 'true'
        run: |
          echo "### ☸️ Kubernetes Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Namespace:** mynextjs-app" >> $GITHUB_STEP_SUMMARY
          echo "**Deployment:** mynextjs-app" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

      # 6. Manual deployment instructions (jika tidak ada KUBECONFIG)
      - name: 📝 Manual deployment instructions
        if: vars.ENABLE_K8S_DEPLOY != 'true'
        run: |
          echo "### 📋 Manual Deployment Instructions" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "KUBECONFIG not configured. To deploy manually:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# 1. Pull latest image" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# 2. Import to MicroK8s (if using MicroK8s)" >> $GITHUB_STEP_SUMMARY
          echo "docker save ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest -o /tmp/mynextjs-app.tar" >> $GITHUB_STEP_SUMMARY
          echo "multipass transfer /tmp/mynextjs-app.tar microk8s-vm:/tmp/" >> $GITHUB_STEP_SUMMARY
          echo "microk8s ctr image import /tmp/mynextjs-app.tar" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# 3. Update deployment image" >> $GITHUB_STEP_SUMMARY
          echo "kubectl set image deployment/mynextjs-app mynextjs-app=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest -n mynextjs-app" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# 4. Verify deployment" >> $GITHUB_STEP_SUMMARY
          echo "kubectl rollout status deployment/mynextjs-app -n mynextjs-app" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
